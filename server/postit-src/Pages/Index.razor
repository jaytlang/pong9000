@page "/"
@using System.Net.Http
@inject HttpClient Http

<h1>Welcome to Post-It!</h1>

<p>Paste in your code and it'll show up on PONG 9000!</p>

<EditForm Model="@submission" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <p>
        <label>The game name: <br /> <InputText @bind-Value="submission.Name" /></label>
    </p>
    <p>
        <label>Hostname of choice? <br /> <InputText @bind-Value="submission.Host" /></label>
    </p>
    <p>
        <label>The code: <br />
        <InputTextArea placeholder="Make sure to include an int main()!" rows="8" cols="50" @bind-Value="submission.Code" />
        </label>
    </p>

    <ValidationSummary />

    <button type="submit" class="btn @(working?"btn-success":"btn-primary")">@(working?"Thank you!":"Submit")</button>
    <button type="reset" class="btn">Reset</button>
</EditForm>

@code{
    private Submission submission = new Submission();
    string url = "https://608dev-2.net/sandbox/sc/team070/request_handler/request_handler.py";
    bool working = false;


    private async Task HandleValidSubmit()
    {
        working = true;
        var dict = new Dictionary<string, string>();
        dict.Add("game_name", submission.Name);
        dict.Add("host", submission.Host);
        dict.Add("game_code", submission.Code);
        var client = new HttpClient();
        var req = new HttpRequestMessage(HttpMethod.Post, url) { Content = new FormUrlEncodedContent(dict) };
        await client.SendAsync(req);
        await Task.Delay(500);
        working = false;
    }
}
